function FSW_ModulatedSetup(FSW,SMW,Fo,pwr,BW)
    message = sprintf('INST:SEL AMPL'); % select the amplifier channel
    fprintf(FSW,message);
    message = sprintf('CONF:DDPD:APPL:STAT OFF'); % Turn off DPD
    fprintf(FSW,message);
    message = sprintf(['DISP:WIND:TRAC:Y:SCAL:RLEV ', num2str(0)]); % set ref level high initially
    fprintf(FSW,message);
    pause(1)

    message = sprintf('CONF:GEN:RFO:STAT OFF;*WAI'); %turn off RF
    fprintf(FSW,message);
    pause(1)

    message = sprintf(['SENS:FREQ:CENT ',num2str(Fo)]); %set freq
    fprintf(FSW,message);
    pause(2)
    SMJ100A_FreqSet(SMW, Fo)
    pause(2)
    message = sprintf('CONF:GEN:POW:LEV %f;*WAI',pwr); % set the power
    fprintf(FSW,message);
    pause(2)

    message = sprintf(['CONF:REFS:GOS:BWID ',num2str(BW)]); % set desired BW
    fprintf(FSW,message);
    message = sprintf(['CONF:REFS:GOS:CRES ',num2str(10)]); % set desired crest factor
    fprintf(FSW,message);
    message = sprintf('CONF:REFS:GOS:WRIT;*WAI'); % Generate, play on generator
    fprintf(FSW,message);
    pause(2) % wait a second
    
    message = sprintf('CONF:GEN:RFO:STAT ON;*WAI'); %turn on RF
    fprintf(FSW,message);
    pause(2)
    message = sprintf('INIT:CONT ON'); % set amplifier channel to continuous mode
    fprintf(FSW,message);
    pause(2)
    % message = sprintf('INIT:CONT OFF'); % turn off cont mode for single measurement
    % fprintf(FSW,message);
    % message = sprintf('CALC1:MARK1:MAX'); %move marker to peak power of spectrum
    % fprintf(FSW,message);
    % message = sprintf('CALC1:MARK1:Y?'); %Grab the power level at the peak power
    % lvl = str2double(query(FSW,message));
    % lvl=lvl+3;
    message = sprintf('INIT:CONT ON'); % set amplifier channel to continuous mode
    fprintf(FSW,message);
    message = sprintf(['DISP:WIND:TRAC:Y:SCAL:RLEV ', num2str(lvl)]); %set ref level in amp channel
    fprintf(FSW,message);
    
    %set level in spectrum
    %channels should already be setup
    message = sprintf('INST:SEL SAN'); % back to the Spectrum
    fprintf(FSW,message);
    message = sprintf(['SENS:FREQ:CENT ', num2str(Fo)]); %set center freq
    fprintf(FSW,message);
    pause(1)
  
    message = sprintf(['DISP:WIND:TRAC:Y:SCAL:RLEV ', num2str(0)]); % set ref level high initially
    fprintf(FSW,message);
    %do all the channel settings
    message = sprintf('SENS:POW:ACH:TXCH:COUN 1'); %1 tx channel
    fprintf(FSW,message);
    message = sprintf('SENS:POW:ACH:ACP 1'); %1 adj channel
    fprintf(FSW,message);
    message = sprintf(['SENS:POW:ACH:BWID:CHAN1 ', num2str(BW)]); %Tx channel BW
    fprintf(FSW,message);
    message = sprintf(['SENS:POW:ACH:BWID:ACH ', num2str(BW)]); %Adj channel BW
    fprintf(FSW,message);
    message = sprintf(['SENS:POW:ACH:SPAC:ACH ', num2str(BW)]); %Adj channel spacing
    fprintf(FSW,message);
    message = sprintf('INIT:CONT ON'); % set spectrum channel to continuous mode
    fprintf(FSW,message);
    message = sprintf(['SENS:FREQ:SPAN ', num2str((BW*3) + (BW/10))]); %set span
    fprintf(FSW,message);
    pause(1)  
    message = sprintf('INIT:CONT OFF'); % turn off cont mode for single measurement
    fprintf(FSW,message);
    message = sprintf('CALC1:MARK1:MAX'); %move marker to peak power of spectrum
    fprintf(FSW,message);
    message = sprintf('CALC1:MARK1:Y?'); %Grab the power level at the peak power
    lvl = str2double(query(FSW,message));
    lvl=lvl+3;
    message = sprintf('INIT:CONT ON'); % set spec channel to continuous mode
    fprintf(FSW,message);
    message = sprintf(['DISP:WIND:TRAC:Y:SCAL:RLEV ', num2str(lvl)]); %set ref level in specan channel
    fprintf(FSW,message);
end